@inject IJSRuntime JS

<div class="swiper-container" @ref="container">
    <button class="nav-btn-prev d-none d-sm-block">
        <i class="bi bi-chevron-left"></i>
    </button>
    <div class="d-flex flex-grow-1 align-items-center overflow-x-auto swiper-content">
        @foreach (var actor in Actors)
        {
            <ActorSwiperItem Actor="actor"/>
        }
       
    </div>

    <button class="nav-btn-next d-none d-sm-block">
        <i class="bi bi-chevron-right"></i>
    </button>
</div>

@code {

    [Parameter, EditorRequired]
    public List<Cast> Actors { get; set; } = [];

    ElementReference container;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await using var jsModule = await JS.InvokeAsync<IJSObjectReference>("import", "/Components/UI/ActorSwiper/ActorSwiper.razor.js");
 
            await jsModule.InvokeVoidAsync("init", container);
        }
    }

}
